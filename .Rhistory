cgroup = c("",  "Sleep disturbance", ""),
n.cgroup = c(2, 2, 1),
tfoot = "P value calculated by Chisq-Test and T-Test",
rnames = FALSE,
caption = "Basic Characteristics according to Sleep disturbance"
)
mod1 = dat1 %>%
glm(data=.,              # data 는 . 을 통해 상속 받고,
family="binomial",   # binomial로 구성
formula = sleepgp == "1.sleep disturbance"  # 모형 설정
~ wwa1gp)
mod2 = dat1 %>%
glm(data=.,
family="binomial",
formula = sleepgp == "1.sleep disturbance"
~ wwa1gp +
AGE + sexgp +satisfaction
)
mod3 = dat1 %>%
glm(data=.,
family="binomial",
formula = sleepgp == "1.sleep disturbance"
~ wwa1gp +
AGE + sexgp +satisfaction+
shiftWork + njob
)
oddsTabf(mod1, mod2, mod3)
use_r("tabf")
devtools::load_all(".")
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWork" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars)
tab1 %>%
setNames(c("", "", "None", "Disturbance", "P value")) %>%
htmlTable(
cgroup = c("",  "Sleep disturbance", ""),
n.cgroup = c(2, 2, 1),
tfoot = "P value calculated by Chisq-Test and T-Test",
rnames = FALSE,
caption = "Basic Characteristics according to Sleep disturbance"
)
use_r("dspubTab")
library(devtools)
use_r("dspubTab")
devtools::load_all(".")
roxygen2::roxygenise()
rm(list=ls())
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("htmlTable")) install.packages("htmlTable")
if(!require("haven")) install.packages("haven")
if(!require("broom")) install.packages("broom")
url <- "https://dspubs.org/webapps/forum/open_data/kwcsData1.rds"
download.file(url, "data/kwcsData1.rds")
download.file(url, "data/kwcsData1.rds")
dat1 = readRDS("data/kwcsData1.rds")
library(devtools)
#install_github("jinhaslab/tabf")
library(tabf)
dat1
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWork" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars)
library(tabf)
devtools::load_all(".")
library(tabf)
library(tabf)
devtools::load_all(".")
library(tabf)
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("htmlTable")) install.packages("htmlTable")
if(!require("haven")) install.packages("haven")
if(!require("broom")) install.packages("broom")
url <- "https://dspubs.org/webapps/forum/open_data/kwcsData1.rds"
download.file(url, "data/kwcsData1.rds")
dat1 = readRDS("data/kwcsData1.rds")
library(devtools)
#install_github("jinhaslab/tabf")
library(tabf)
dat1
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWork" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars)
dat1 = readRDS("data/kwcsData1.rds")
library(tabf)
??oddf0
devtools::load_all(".")
library(tabf)
rm(list=ls())
if(!require("tidyverse")) install.packages("tidyverse")
if(!require("htmlTable")) install.packages("htmlTable")
if(!require("haven")) install.packages("haven")
if(!require("broom")) install.packages("broom")
url <- "https://dspubs.org/webapps/forum/open_data/kwcsData1.rds"
download.file(url, "data/kwcsData1.rds")
dat1 = readRDS("data/kwcsData1.rds")
library(devtools)
#install_github("jinhaslab/tabf")
library(tabf)
dat1
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWork" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat1, stratas = stratas, catVars = catVars, conVars = conVars)
tab1 %>%
setNames(c("", "", "None", "Disturbance", "P value")) %>%
htmlTable(
cgroup = c("",  "Sleep disturbance", ""),
n.cgroup = c(2, 2, 1),
tfoot = "P value calculated by Chisq-Test and T-Test",
rnames = FALSE,
caption = "Basic Characteristics according to Sleep disturbance"
)
mod1 = dat1 %>%
glm(data=.,              # data 는 . 을 통해 상속 받고,
family="binomial",   # binomial로 구성
formula = sleepgp == "1.sleep disturbance"  # 모형 설정
~ wwa1gp)
mod2 = dat1 %>%
glm(data=.,
family="binomial",
formula = sleepgp == "1.sleep disturbance"
~ wwa1gp +
AGE + sexgp +satisfaction
)
mod3 = dat1 %>%
glm(data=.,
family="binomial",
formula = sleepgp == "1.sleep disturbance"
~ wwa1gp +
AGE + sexgp +satisfaction+
shiftWork + njob
)
oddsTabf(mod1, mod2, mod3)
dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
data2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat2, stratas = stratas, catVars = catVars, conVars = conVars)
data2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat2, stratas = stratas, catVars = catVars, conVars = conVars)
data2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat1=dat2, stratas = stratas, catVars = catVars, conVars = conVars)
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
dat2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "empgp"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
tab1
type(dat2$shiftWorkF)
class(dat2$shiftWorkF)
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "AGE"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
tabf = function(dat1, stratas, catVars, conVars){
options(dplyr.summarise.inform = FALSE)
varOrder = tibble("variables"=c(catVars, conVars)) %>%
mutate(order = row_number())
catTab = dat1 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( variables, values) %>%
count(!!sym(stratas)) %>%
mutate(prob = n/sum(n),
smry= sprintf("%.0f (%.1f%%)", n, prob*100)
) %>%
select(-n, -prob) %>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry)
conTab =
dat1 %>%
select(stratas, all_of(conVars)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( !!sym(stratas), variables) %>%
summarise(avg = mean(values, na.rm =TRUE),
std = sd(values, na.rm =TRUE)
) %>%
mutate(smry  = sprintf("%.1f\u00b1%.1f", avg, std)) %>%
select(stratas, variables, smry)%>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry) %>%
mutate(values ="")
tabDat = rbind(catTab, conTab)
catPvalue =
dat1 %>%
select(stratas, catVars) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by(variables, values) %>%
count(!!sym(stratas)) %>%
pivot_wider(names_from = stratas, values_from =n) %>%
ungroup() %>%
select(-values) %>%
nest(dat = -variables) %>%
mutate(
fit = map(dat,
~chisq.test(.x)),
tidied = map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
conPvalue=dat1 %>%
mutate(stratas = !!sym(stratas)) %>%
select(stratas, conVars) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values") %>%
nest(dat = -variables) %>%
mutate(
fit   =map(dat, ~t.test(.$values ~ .$stratas)),
tidied=map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
tabPvalue = rbind(catPvalue, conPvalue)
tab1 = tabDat %>%
left_join(tabPvalue, by=c("variables")) %>%
left_join(varOrder, by = c("variables")) %>%
arrange(order, values) %>%
group_by(variables) %>%
mutate(ranks = row_number()) %>%
mutate(p.value   = ifelse(ranks==min(ranks), p.value,   "")) %>%
mutate(variables = ifelse(ranks==min(ranks), variables, "")) %>%
ungroup() %>%
select(-order, -ranks)%>%
mutate(values = str_replace(values, "[:digit:]\\.", ""))
return(tab1)
}  %>% suppressWarnings()
dat1
dat2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
class(dat2$shiftWorkF)
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "AGE"
)
conVars = c("AGE","satisfaction")
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
tabf = function(dat1, stratas, catVars, conVars){
options(dplyr.summarise.inform = FALSE)
varOrder = tibble("variables"=c(catVars, conVars)) %>%
mutate(order = row_number())
catTab = dat1 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( variables, values) %>%
count(!!sym(stratas)) %>%
mutate(prob = n/sum(n),
smry= sprintf("%.0f (%.1f%%)", n, prob*100)
) %>%
select(-n, -prob) %>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry)
conTab =
dat1 %>%
select(stratas, all_of(conVars)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( !!sym(stratas), variables) %>%
summarise(avg = mean(values, na.rm =TRUE),
std = sd(values, na.rm =TRUE)
) %>%
mutate(smry  = sprintf("%.1f\u00b1%.1f", avg, std)) %>%
select(stratas, variables, smry)%>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry) %>%
mutate(values ="")
tabDat = rbind(catTab, conTab)
catPvalue =
dat1 %>%
select(stratas, catVars) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by(variables, values) %>%
count(!!sym(stratas)) %>%
pivot_wider(names_from = stratas, values_from =n) %>%
ungroup() %>%
select(-values) %>%
nest(dat = -variables) %>%
mutate(
fit = map(dat,
~chisq.test(.x)),
tidied = map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
conPvalue=dat1 %>%
mutate(stratas = !!sym(stratas)) %>%
select(stratas, conVars) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values") %>%
nest(dat = -variables) %>%
mutate(
fit   =map(dat, ~t.test(.$values ~ .$stratas)),
tidied=map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
tabPvalue = rbind(catPvalue, conPvalue)
tab1 = tabDat %>%
left_join(tabPvalue, by=c("variables")) %>%
left_join(varOrder, by = c("variables")) %>%
arrange(order, values) %>%
group_by(variables) %>%
mutate(ranks = row_number()) %>%
mutate(p.value   = ifelse(ranks==min(ranks), p.value,   "")) %>%
mutate(variables = ifelse(ranks==min(ranks), variables, "")) %>%
ungroup() %>%
select(-order, -ranks)%>%
mutate(values = str_replace(values, "[:digit:]\\.", ""))
return(tab1)
}  %>% suppressWarnings()
dat1
dat2 = dat1 %>%
mutate(shiftWorkF = relevel(as.factor(shiftWork), ref = "0.non shift work"))
class(dat2$shiftWorkF)
stratas  = c("sleepgp")
catVars = c(
"wwa1gp",
"shortReturn","shiftWorkF" , "njob",
"sexgp", "agegp",
"edugp", "AGE"
)
conVars = c("satisfaction")
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
catTab = dat1 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( variables, values) %>%
count(!!sym(stratas)) %>%
mutate(prob = n/sum(n),
smry= sprintf("%.0f (%.1f%%)", n, prob*100)
) %>%
select(-n, -prob) %>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry)
catTab = dat2 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( variables, values) %>%
count(!!sym(stratas)) %>%
mutate(prob = n/sum(n),
smry= sprintf("%.0f (%.1f%%)", n, prob*100)
) %>%
select(-n, -prob) %>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry)
conTab =
dat1 %>%
select(stratas, all_of(conVars)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( !!sym(stratas), variables) %>%
summarise(avg = mean(values, na.rm =TRUE),
std = sd(values, na.rm =TRUE)
) %>%
mutate(smry  = sprintf("%.1f\u00b1%.1f", avg, std)) %>%
select(stratas, variables, smry)%>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry) %>%
mutate(values ="")
tabDat = rbind(catTab, conTab)
tabf = function(dat1, stratas, catVars, conVars){
options(dplyr.summarise.inform = FALSE)
varOrder = tibble("variables"=c(catVars, conVars)) %>%
mutate(order = row_number())
catTab = dat1 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( variables, values) %>%
count(!!sym(stratas)) %>%
mutate(prob = n/sum(n),
smry= sprintf("%.0f (%.1f%%)", n, prob*100)
) %>%
select(-n, -prob) %>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry)
conTab =
dat1 %>%
select(stratas, all_of(conVars)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by( !!sym(stratas), variables) %>%
summarise(avg = mean(values, na.rm =TRUE),
std = sd(values, na.rm =TRUE)
) %>%
mutate(smry  = sprintf("%.1f\u00b1%.1f", avg, std)) %>%
select(stratas, variables, smry)%>%
ungroup() %>%
pivot_wider(names_from = stratas, values_from =smry) %>%
mutate(values ="")
tabDat = rbind(catTab, conTab)
catPvalue =
dat1 %>%
select(stratas, all_of(catVars)) %>%
mutate(across(everything(), as.character)) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values")%>%
group_by(variables, values) %>%
count(!!sym(stratas)) %>%
pivot_wider(names_from = stratas, values_from =n) %>%
ungroup() %>%
select(-values) %>%
nest(dat = -variables) %>%
mutate(
fit = map(dat,
~chisq.test(.x)),
tidied = map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
conPvalue=dat1 %>%
mutate(stratas = !!sym(stratas)) %>%
select(stratas, conVars) %>%
pivot_longer(-c(stratas), names_to = "variables", values_to ="values") %>%
nest(dat = -variables) %>%
mutate(
fit   =map(dat, ~t.test(.$values ~ .$stratas)),
tidied=map(fit, tidy)
) %>%
unnest(tidied) %>%
select(variables, p.value) %>%
mutate(p.value = ifelse(p.value <0.001, "<0.001", sprintf("%.3f", p.value)))
tabPvalue = rbind(catPvalue, conPvalue)
tab1 = tabDat %>%
left_join(tabPvalue, by=c("variables")) %>%
left_join(varOrder, by = c("variables")) %>%
arrange(order, values) %>%
group_by(variables) %>%
mutate(ranks = row_number()) %>%
mutate(p.value   = ifelse(ranks==min(ranks), p.value,   "")) %>%
mutate(variables = ifelse(ranks==min(ranks), variables, "")) %>%
ungroup() %>%
select(-order, -ranks)%>%
mutate(values = str_replace(values, "[:digit:]\\.", ""))
return(tab1)
}  %>% suppressWarnings()
tab1 = tabf(dat2, stratas = stratas, catVars = catVars, conVars = conVars)
tab1
tab1 %>%
setNames(c("", "", "None", "Disturbance", "P value")) %>%
htmlTable(
cgroup = c("",  "Sleep disturbance", ""),
n.cgroup = c(2, 2, 1),
tfoot = "P value calculated by Chisq-Test and T-Test",
rnames = FALSE,
caption = "Basic Characteristics according to Sleep disturbance"
)
